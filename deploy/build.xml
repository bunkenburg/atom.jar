<?xml version="1.0" encoding="UTF-8"?>
<project name="atom" default="build" basedir="..">

	<taskdef resource="net/sf/antcontrib/antlib.xml" />
	
	<!--Compile the three groups-->
	<target name="compile" description="Compiles atom.jar/.">

		<!--Common. Depends only on gdata-core-1.0.jar and log4j-boot.jar.-->
		<echo>javac atom-common</echo>
	    <javac destdir="atom-common/src/" debug="true" includeantruntime="false">
    		<src path="atom-common/src/"/>
	    	<classpath>
    			<fileset dir="lib/"><include name="**/*.jar"/></fileset>
    		</classpath>
    	</javac>
		
		<!--Client. Depends on atom-common, gdata-core-1.0.jar and log4j-boot.jar.-->
		<echo>javac atom-client</echo>
	    <javac destdir="atom-client/src/" debug="true" includeantruntime="false">
    		<src path="atom-client/src/"/>
	    	<classpath>
    			<pathelement location="atom-common/src/"/>
    			<fileset dir="lib/"><include name="**/*.jar"/></fileset>
    		</classpath>
    	</javac>
		
		<!--Server. Depends on atom-common, gdata-core-1.0.jar, log4j-boot.jar, but also jee-5.jar.-->
		<echo>javac atom-server</echo>
	    <javac destdir="atom-server/src/" debug="true" includeantruntime="false">
    		<src path="atom-server/src/"/>
	    	<classpath>
    			<pathelement location="atom-common/src/" />
    			<fileset dir="lib/"><include name="**/*.jar"/></fileset>
    			<fileset dir="atom-server/compile/"><include name="**/*.jar"/></fileset>
    		</classpath>
    	</javac>
	</target>
		
	<target name="clean" description="Clean old compiled classes.">
		<delete><fileset dir="atom.jar/" includes="**/*.class"/></delete>
	</target>
				
	<!--Make atom-server.jar and atom-client.jar-->
	<target name="build" description="Builds a fresh stage/atom-*.jar." depends="compile">
		
		<!--Make stage/atom-server.jar with generated MANIFEST.MF, from atom-common and atom-server.-->
		<loadfile property="version" srcfile="version.txt" />
		<mkdir dir="stage"/>
		<jar destfile="stage/atom-server.jar" index="true">
			<manifest>
				<attribute name="Built-By" value="${user.name}"/>
				<attribute name="Implementation-Vendor" value="alex@inspiracio.cat"/>
				<attribute name="Implementation-Title" value="atom.jar"/>
				<attribute name="Implementation-Version" value="${version}"/>
			</manifest>
			<fileset dir="atom-common/src/"></fileset>
			<fileset dir="atom-server/src/"></fileset>
		</jar>
		
	<!--Make stage/atom-client.jar with generated MANIFEST.MF-->
		<loadfile property="version" srcfile="version.txt" />
		<mkdir dir="stage"/>
		<jar destfile="stage/atom-client.jar" index="true">
			<manifest>
				<attribute name="Built-By" value="${user.name}"/>
				<attribute name="Implementation-Vendor" value="alex@inspiracio.cat"/>
				<attribute name="Implementation-Title" value="atom.jar"/>
				<attribute name="Implementation-Version" value="${version}"/>
			</manifest>
			<fileset dir="atom-common/src/"></fileset>
			<fileset dir="atom-client/src/"></fileset>
		</jar>
	
		<!--Copy the JARs into test projects-->
		<copy todir="atom-client-android/lib/" file="stage/atom-client.jar"></copy>
		<copy todir="atom-server-appengine/atom-server-appengine/war/WEB-INF/lib/" file="stage/atom-server.jar"></copy>
	
		<!--if there is copy.sh, call it, to copy the JARs into other projects.-->
		<if>
	 		<available file="deploy/copy.sh" />
	 		<then>
	   			<exec executable="deploy/copy.sh" />
	 		</then>
		</if>
	</target>
		
	<target name="daily_build">
		<fail unless="version" message="Specify -Dversion=0.0.1.02 or similar."/>
		
		<!--Update version.txt.
			Also substitute version into release_notes.html.
		-->
		<echo file="version.txt" message="${version}"/>
		<replaceregexp
			file="release_notes.html"
			match="&lt;td id='version'>.*&lt;/td>"
			replace="&lt;td id='version'>${version}&lt;/td>"
		>
		</replaceregexp>
		
		<delete quiet="true" dir="stage"/><mkdir dir="stage"/>
		<antcall target="build" />
		<antcall target="javadoc" />

		<!--Copy the stuff - to where?-->
	</target>

	<target name="javadoc">
		<loadfile property="version" srcfile="version.txt" />
		<copy file="atom-common/src/overview.html" todir="stage/"/>
		<replace file="stage/overview.html" token="$${version}" value="${version}" />

		<!--atom-client-->
		<javadoc 
			destdir="doc/atom-client/" 
			overview="stage/overview.html"
			version="true"
			use="true"
			author="true"
			windowtitle="atom-client.jar ${version}"
			doctitle="atom-client.jar ${version}"
			header="atom-client.jar ${version}"
			footer="atom-client.jar ${version}"
		>
	    	<sourcepath>
    			<pathelement location="atom-common/src/"></pathelement>
    			<pathelement location="atom-client/src/"></pathelement>
    		</sourcepath>
	    	<classpath>
    			<fileset dir="lib/"><include name="**/*.jar"/></fileset>
    		</classpath>
			<link href="http://java.sun.com/javase/6/docs/api/"/>
			<link href="http://java.sun.com/javaee/5/docs/api/"/>
			<bottom></bottom>
		</javadoc>
		<zip destfile="stage/atom-client-javadoc.zip" basedir="doc/atom-client/" />

		<!--atom-server-->
		<javadoc 
			destdir="doc/atom-server/" 
			overview="stage/overview.html"
			version="true"
			use="true"
			author="true"
			windowtitle="atom-server.jar ${version}"
			doctitle="atom-server.jar ${version}"
			header="atom-server.jar ${version}"
			footer="atom-server.jar ${version}"
		>
	    	<sourcepath>
    			<pathelement location="atom-common/src/"></pathelement>
    			<pathelement location="atom-server/src/"></pathelement>
    		</sourcepath>
	    	<classpath>
    			<fileset dir="atom-server/compile/"><include name="**/*.jar"/></fileset>
    			<fileset dir="lib/"><include name="**/*.jar"/></fileset>
    		</classpath>
			<link href="http://java.sun.com/javase/6/docs/api/"/>
			<link href="http://java.sun.com/javaee/5/docs/api/"/>
			<bottom></bottom>
		</javadoc>
		<zip destfile="stage/atom-server-javadoc.zip" basedir="doc/atom-server/" />
		<delete file="stage/overview.html"></delete>
		<zip destfile="stage/atom-server-javadoc.zip" basedir="doc/atom-server/" />
	</target>

</project>